name: Teraform CI CD pipeline for Deploying Bastion Server
run-name: ${{ github.actor }} has triggered the pipeline

on: 
  # push:
  #   # branches:
  #   #   - 'main'
  workflow_dispatch:
    inputs:
      # Terraform action you want to perform
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - terraform-apply
        - terraform-destroy

  
env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-apply:
    name: terraform-apply
    if: ${{ github.event.inputs.action == 'terraform-apply' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: .
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: .
      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: .
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve
        working-directory: .

  terraform-destroy:
    name: terraform-destroy
    if: ${{ github.event.inputs.action == 'terraform-destroy' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: .
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: .
      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: .
      - name: Terraform Destroy
        id: apply
        run: terraform destroy --auto-approve
        working-directory: .
        
